Questions:
Most of the information I've found on VOR navigation state that the pilot is attempting to follow an intended radial. Are we to assume the pilot's planned course is either directly away from or directly towards the VOR station in question? E.g. pass over VOR station until signal becomes good, set heading to a specific radial away from station, correct course until plane is in line with that radial, and further correct course so that VOR signal is behind the aircraft, so the aircraft is on course moving away from station? Or, alternately, should our system allow an aircraft to maintain course while passing a VOR on their left or right (which seems much harder)?

In the instuctions for the fake radio signal, you've left out the morse code identifying the station. Are we to assume (for now) the system is receiving a signal from the correct station, so we don't need to write a function to handle the station identifier signal?

The instructions do not mention a DME signal. Am I right in assuming our system does not receive one / does not know / does not need to know distance from VOR station? (except in the isntances when too close or two far away, which are indicated by the "good" or "bad" portion of the signal).

Hosting (same)

Methods Design:

/* main method
 * Parameters: int OBS, int signal
 * Returns: String adjustment (possible outputs "BAD" "AHEAD" "TL1" "TL2" "TL3" "TL4" "TLM" "TR1" "TR2" "TR3" "TR4" "TRM" "FL1" "FL2" "FL3" "FL4" "FLM" "FR1" "FR2" "FR3" "FR4" "FRM")
 * In return string, T/F is To/From, L/R is left/right, and 1-4 or M is 1/2 number for degrees or Maximum correction
 *
 * First calls signalTest, returns "BAD" if signalTest is 1, proceeds otherwise
 * Calls signalParse, stores result
 * Calls heading, stores result
 * Returns value from heading
*/

/* signalTest
 * Parameters: int signal
 * Returns: 0 or 1 (0 for any signal with a "GOOD" indicator, 1 for a "BAD" indicator)
*/

/* signalParse
 * Parameters: int signal
 * Returns: int radial (0 to 359)
*/

/* heading
 * Parameters: int radial, int OBS
 * Returns: String adjustment
 *
 * Will return "BAD" if OBS - radial equals 89, 90, 91, 269, 270, 271, -89, -90, -91, -269, -270, or -271 
 * Will return "FWD" if OBS == radial
 * Will return a simplified version of the comparison otherwise, with To/From indicated (e.g. "TL1", "FRM")
*/

/* radio
 * Parameters: int radial, boolean status (0 for "Good", 1 for "BAD")
 * Returns: int signal
 *
 * This is essentially a driver method used to produce a fake radio signal
*/


